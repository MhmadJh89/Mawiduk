"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
from cryptography.fernet import Fernet

# استخدم متغير بيئي أو أنشئ مفتاحًا جديدًا عند أول تشغيل
PASSWORD_ENCRYPTION_KEY = os.getenv(
    "PASSWORD_ENCRYPTION_KEY",
    Fernet.generate_key().decode()  # احفظ هذه القيمة الثابتة في .env لاحقًا
).encode()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nolz!x5%rgv1opqianizo*4*)ktes_365t!6+=z#5uwzm_dwg1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '::1']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',  
    'rest_framework_simplejwt.token_blacklist',
    'social_django', # for google auth
    'apps.users',
    'apps.appointments',
    'apps.booking',
    'apps.clients',
    'apps.services',
    'corsheaders',


]
CORS_ALLOW_ALL_ORIGINS = True
# for google auth
AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)
# for google auth

# for google auth
SOCIAL_AUTH_URL_NAMESPACE = 'social'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',  # يسمح باستخدام جلسة الـ Admin
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # لو تستخدم JWT كمان
        # أو أي طريقة ثانية عندك
    ],
}


SIMPLE_JWT = {
    # مدة صلاحية توكين الوصول
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),

    # مدة صلاحية توكين التحديث
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),

    # إذا فعّلت الدوران، سيُنشئ لك توكين تحديث جديد عند كل Refresh
    'ROTATE_REFRESH_TOKENS': True,

    # عند الدوران، يتم حظر التوكين القديم
    'BLACKLIST_AFTER_ROTATION': True,

    # خوارزمية التوقيع، ومفتاح التوقيع
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,

    # نوع الهيدر المستخدم في الطلب
    'AUTH_HEADER_TYPES': ('Bearer',),

    # إعدادات إضافية
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'core.urls'



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
   'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

AUTH_USER_MODEL = 'users.CustomUser'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
